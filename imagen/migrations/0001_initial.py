# Generated by Django 5.2.4 on 2025-08-31 23:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_prompt', models.TextField(help_text='The exact prompt sent to the image generation service.', verbose_name='Final Prompt Used for Generation')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Image Generation Path',
                'verbose_name_plural': 'Image Generation Paths',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(upload_to='generated_images/%Y/%m/%d/', verbose_name='Image File')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='imagen.path', verbose_name='Parent Path')),
            ],
            options={
                'verbose_name': 'Generated Image',
                'verbose_name_plural': 'Generated Images',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gemini_request', models.TextField(blank=True, help_text="Initial user request for generating a prompt (e.g., 'A cat in space').", verbose_name='Gemini Request')),
                ('prompt', models.TextField(blank=True, help_text='The detailed prompt generated by Gemini, used for image creation.', verbose_name='Prompt (Response)')),
                ('attributes', models.TextField(blank=True, help_text='Additional attributes or notes, for now a simple text field.', verbose_name='Attributes')),
                ('ig_content', models.TextField(blank=True, help_text='The final text content for the Instagram post.', verbose_name='Instagram Content')),
                ('published', models.BooleanField(default=False, help_text='Indicates if the post has been published to Instagram.', verbose_name='Published')),
                ('publishing_date', models.DateTimeField(blank=True, help_text='Scheduled or actual date of publishing.', null=True, verbose_name='Publishing Date')),
                ('ig_post_id', models.CharField(blank=True, help_text='The unique ID of the post on Instagram after publishing.', max_length=255, null=True, verbose_name='Instagram Post ID')),
                ('order', models.PositiveIntegerField(default=0, help_text='A number for ordering items in the admin list.', verbose_name='Order')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Views')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='Likes')),
                ('comments', models.PositiveIntegerField(default=0, verbose_name='Comments')),
                ('follows', models.PositiveIntegerField(default=0, verbose_name='Follows')),
                ('path', models.ForeignKey(blank=True, help_text='Links to the set of images generated from the prompt.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='imagen.path', verbose_name='Image Generation Path')),
            ],
            options={
                'verbose_name': 'Content Generation',
                'verbose_name_plural': 'Content Generations',
                'ordering': ['order', '-publishing_date'],
            },
        ),
    ]
